{"version":3,"file":"static/js/455.7566a94c.chunk.js","mappings":"qKAAO,MAAMA,EAAU,mCCGvBC,EAAAA,EAAMC,SAASC,QDFS,+BCIjB,MAAMC,EAAoBC,UAC/B,IAEE,aADuBJ,EAAAA,EAAMK,IAAI,8BAADC,OAA+BP,KAC/CQ,KAAKC,OACvB,CAAE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GAGWE,EAAoBP,UAC/B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,sBAADC,OACRM,EAAK,aAAAN,OAAYP,KAEzBQ,KAAKC,OACvB,CAAE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GAGWI,EAAkBT,UAC7B,IAEE,aADuBJ,EAAAA,EAAMK,IAAI,SAADC,OAAUQ,EAAO,aAAAR,OAAYP,KAC7CQ,IAClB,CAAE,MAAOE,GACPC,QAAQD,MAAMA,EAChB,GAGWM,EAAeX,UAC1B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,UAADC,OACpBQ,EAAO,qBAAAR,OAAoBP,KAEvBQ,KAAKS,IACvB,CAAE,MAAOP,GACPC,QAAQD,MAAMA,EAChB,GAGWQ,EAAkBb,UAC7B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,SAADC,OACrBQ,EAAO,qBAAAR,OAAoBP,KAEtBQ,IAClB,CAAE,MAAOE,GACPC,QAAQD,MAAMA,EAChB,E,6HClDK,MAAMS,EAAOC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iFAMlBC,EAAQJ,EAAAA,GAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4HAOpBI,EAASP,EAAAA,GAAOQ,OAAMC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iVAiBtBO,EAAeV,EAAAA,GAAOW,IAAGC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qDAKzBU,EAASb,EAAAA,GAAOc,GAAEC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kNAUlBa,EAAahB,EAAAA,GAAOiB,GAAEC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,iSAatBgB,GAAenB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAYqB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,oCAI3BmB,EAAUtB,EAAAA,GAAOuB,IAAGC,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,yFAOpBsB,EAAczB,EAAAA,GAAOW,IAAGe,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,sIAQxBwB,EAAc3B,EAAAA,GAAO4B,GAAEC,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,iMAWvB2B,EAAe9B,EAAAA,GAAO+B,KAAIC,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,kJ,sBCzEvC,MAqEA,EArEyB8B,KACvB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,OAC9BC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAeH,EAAanD,IAAI,SAChCuD,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACJH,IACFhD,EAAAA,EAAAA,IAAkBgD,GAAcI,KAAKT,EACvC,GACC,CAACK,IAYJ,OACEK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC9C,EAAI,CAACiD,SAZYC,IACpBA,EAAMC,iBACN,MAAMzD,EAAQwD,EAAME,cAAcC,SAASC,WAAWC,MAEjC,KAAjB7D,EAAM8D,QAIVjB,EAAgB,CAAE7C,MAAOA,GAAQ,EAIFsD,SAAA,EAC3BS,EAAAA,EAAAA,KAACpD,EAAK,CACJqD,KAAK,OACLC,KAAK,aACLC,aAAa,MACbC,WAAS,EACTC,YAAY,uBAEdL,EAAAA,EAAAA,KAACjD,EAAM,CAACkD,KAAK,SAAQV,SAAC,cAEvBb,IACCW,EAAAA,EAAAA,MAACnC,EAAY,CAAAqC,SAAA,CACVb,EAAO4B,OAAS,IACfN,EAAAA,EAAAA,KAAC3C,EAAM,CAAAkC,SACJb,EAAO6B,KAAKC,IACXR,EAAAA,EAAAA,KAACxC,EAAU,CAAA+B,UACTF,EAAAA,EAAAA,MAAC1B,EAAY,CAAC8C,GAAE,GAAA9E,OAAK6E,EAAME,IAAMC,MAAO,CAAEC,KAAM3B,GAAWM,SAAA,EACzDS,EAAAA,EAAAA,KAAA,OAAAT,UACES,EAAAA,EAAAA,KAAClC,EAAO,CACN+C,IACEL,EAAMM,YAAW,mCAAAnF,OACsB6E,EAAMM,aACzCC,EAENC,IAAKR,EAAMS,WAGf5B,EAAAA,EAAAA,MAACpB,EAAW,CAAAsB,SAAA,EACVS,EAAAA,EAAAA,KAAC7B,EAAW,CAAAoB,SAAEiB,EAAMS,SACpBjB,EAAAA,EAAAA,KAAC1B,EAAY,CAAAiB,SACViB,EAAMU,aAAaC,QAAQ,YAfnBX,EAAME,QAuBV,IAAlBhC,EAAO4B,SAAgBN,EAAAA,EAAAA,KAAA,KAAAT,SAAG,2BAG9B,C","sources":["api/apiConst.ts","api/getMovies.ts","pages/PageSearchMovies/PageSearchMovies.styled.jsx","pages/PageSearchMovies/PageSearchMovies.jsx"],"sourcesContent":["export const API_KEY = \"9d3b2d59c7632f197e52385ff97229b9\";\r\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\r\n","import axios from \"axios\";\r\nimport { API_KEY, BASE_URL } from \"./apiConst\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport const getTrandingMovies = async () => {\r\n  try {\r\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getSearchedMovies = async (query: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `search/movie?query=${query}&api_key=${API_KEY}`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async (movieId: string) => {\r\n  try {\r\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieCast = async (movieId: string) => {\r\n  try {\r\n    const responce = await axios.get(\r\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\r\n    );\r\n    return responce.data.cast;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieReviews = async (movieId: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n  font-size: 18px;\r\n  border-radius: 4px;\r\n  border: 2px solid #2a363b;\r\n`;\r\nexport const Button = styled.button`\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  border: 2px solid #ff6b08;\r\n  background-color: #ff6b08;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  :not(:last-child) {\r\n    margin-right: 30px;\r\n  }\r\n  :hover {\r\n    background-color: #fff;\r\n    color: #ff6b08;\r\n    transition: all 1s linear 0s;\r\n  }\r\n`;\r\nexport const ContainerDiv = styled.div`\r\n  padding: 0px 30px;\r\n  margin: 0px auto;\r\n`;\r\n\r\nexport const ListUl = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 30px);\r\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\r\n  gap: 30px;\r\n  margin: 0px auto;\r\n  padding: 15px 20px 0px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ListItemLi = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.03) translateY(-3px);\r\n    box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\r\n  }\r\n`;\r\n\r\nexport const RoutItemLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const ItemImg = styled.img`\r\n  width: 100%;\r\n  height: 355px;\r\n  border-radius: 5px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const ItemInfoDiv = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: space-between;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n`;\r\n\r\nexport const ItemTitleH2 = styled.h2`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  text-transform: uppercase;\r\n  color: #2a363b;\r\n  text-decoration: none;\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const ItemRateSpan = styled.span`\r\n  padding: 0 10px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n\r\n  background-color: #ff6b08;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSearchParams, useLocation } from \"react-router-dom\";\r\nimport { getSearchedMovies } from \"../../api/getMovies\";\r\nimport {\r\n  Button,\r\n  ContainerDiv,\r\n  Form,\r\n  Input,\r\n  ItemImg,\r\n  ItemInfoDiv,\r\n  ItemRateSpan,\r\n  ItemTitleH2,\r\n  ListItemLi,\r\n  ListUl,\r\n  RoutItemLink,\r\n} from \"./PageSearchMovies.styled\";\r\nimport noPoster from \"../../images/noposter.jpg\";\r\n\r\nconst PageSearchMovies = () => {\r\n  const [movies, setMovies] = useState(null);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const currentQuery = searchParams.get(\"query\");\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (currentQuery) {\r\n      getSearchedMovies(currentQuery).then(setMovies);\r\n    }\r\n  }, [currentQuery]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const query = event.currentTarget.elements.inputValue.value;\r\n\r\n    if (query.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    setSearchParams({ query: query });\r\n  };\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"inputValue\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Searched movie...\"\r\n        />\r\n        <Button type=\"submit\">Search</Button>\r\n      </Form>\r\n      {movies && (\r\n        <ContainerDiv>\r\n          {movies.length > 0 && (\r\n            <ListUl>\r\n              {movies.map((movie) => (\r\n                <ListItemLi key={movie.id}>\r\n                  <RoutItemLink to={`${movie.id}`} state={{ from: location }}>\r\n                    <div>\r\n                      <ItemImg\r\n                        src={\r\n                          movie.poster_path\r\n                            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n                            : noPoster\r\n                        }\r\n                        alt={movie.title}\r\n                      />\r\n                    </div>\r\n                    <ItemInfoDiv>\r\n                      <ItemTitleH2>{movie.title}</ItemTitleH2>\r\n                      <ItemRateSpan>\r\n                        {movie.vote_average.toFixed(1)}\r\n                      </ItemRateSpan>\r\n                    </ItemInfoDiv>\r\n                  </RoutItemLink>\r\n                </ListItemLi>\r\n              ))}\r\n            </ListUl>\r\n          )}\r\n          {movies.length === 0 && <p>Nothing was found</p>}\r\n        </ContainerDiv>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageSearchMovies;\r\n"],"names":["API_KEY","axios","defaults","baseURL","getTrandingMovies","async","get","concat","data","results","error","console","getSearchedMovies","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","Form","styled","form","_templateObject","_taggedTemplateLiteral","Input","input","_templateObject2","Button","button","_templateObject3","ContainerDiv","div","_templateObject4","ListUl","ul","_templateObject5","ListItemLi","li","_templateObject6","RoutItemLink","Link","_templateObject7","ItemImg","img","_templateObject8","ItemInfoDiv","_templateObject9","ItemTitleH2","h2","_templateObject10","ItemRateSpan","span","_templateObject11","PageSearchMovies","movies","setMovies","useState","searchParams","setSearchParams","useSearchParams","currentQuery","location","useLocation","useEffect","then","_jsxs","_Fragment","children","onSubmit","event","preventDefault","currentTarget","elements","inputValue","value","trim","_jsx","type","name","autoComplete","autoFocus","placeholder","length","map","movie","to","id","state","from","src","poster_path","noPoster","alt","title","vote_average","toFixed"],"sourceRoot":""}