{"version":3,"file":"static/js/244.dd07c3fd.chunk.js","mappings":"qKAAO,MAAMA,EAAU,mCCGvBC,EAAAA,EAAMC,SAASC,QDFS,+BCIjB,MAAMC,EAAoBC,UAC/B,IAEE,aADuBJ,EAAAA,EAAMK,IAAI,8BAADC,OAA+BP,KAC/CQ,KAAKC,OACvB,CAAE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GAGWE,EAAoBP,UAC/B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,sBAADC,OACRM,EAAK,aAAAN,OAAYP,KAEzBQ,KAAKC,OACvB,CAAE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GAGWI,EAAkBT,UAC7B,IAEE,aADuBJ,EAAAA,EAAMK,IAAI,SAADC,OAAUQ,EAAO,aAAAR,OAAYP,KAC7CQ,IAClB,CAAE,MAAOE,GACPC,QAAQD,MAAMA,EAChB,GAGWM,EAAeX,UAC1B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,UAADC,OACpBQ,EAAO,qBAAAR,OAAoBP,KAEvBQ,KAAKS,IACvB,CAAE,MAAOP,GACPC,QAAQD,MAAMA,EAChB,GAGWQ,EAAkBb,UAC7B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,SAADC,OACrBQ,EAAO,qBAAAR,OAAoBP,KAEtBQ,IAClB,CAAE,MAAOE,GACPC,QAAQD,MAAMA,EAChB,E,wFCnDK,MAAMS,E,OAAUC,GAAOC,EAACC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yD,aCGhB,SAASC,IACtB,MAAM,QAAET,IAAYU,EAAAA,EAAAA,OACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAOvC,OALAC,EAAAA,EAAAA,YAAU,MACRX,EAAAA,EAAAA,IAAgBH,GACbe,MAAMC,GAAaA,EAAStB,UAC5BqB,KAAKH,EAAW,GAClB,CAACZ,KAEFiB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGR,EAAQS,OAAS,EAChBT,EAAQU,KAAKC,IACXC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAOE,UACZP,EAAAA,EAAAA,KAACb,EAAO,CAAAe,SAAEG,EAAOG,YAFTH,EAAOI,OAMnBT,EAAAA,EAAAA,KAAA,KAAAE,SAAG,2BAIX,C","sources":["api/apiConst.ts","api/getMovies.ts","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["export const API_KEY = \"9d3b2d59c7632f197e52385ff97229b9\";\r\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\r\n","import axios from \"axios\";\r\nimport { API_KEY, BASE_URL } from \"./apiConst\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport const getTrandingMovies = async () => {\r\n  try {\r\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getSearchedMovies = async (query: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `search/movie?query=${query}&api_key=${API_KEY}`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async (movieId: string) => {\r\n  try {\r\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieCast = async (movieId: string) => {\r\n  try {\r\n    const responce = await axios.get(\r\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\r\n    );\r\n    return responce.data.cast;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieReviews = async (movieId: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ReviewP = styled.p`\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieReviews } from \"../../api/getMovies\";\r\nimport { ReviewP } from \"./Reviews.styled\";\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movieId)\r\n      .then((response) => response.results)\r\n      .then(setReviews);\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n      {reviews.length > 0 ? (\r\n        reviews.map((review) => (\r\n          <div key={review.id}>\r\n            <h3>{review.author}</h3>\r\n            <ReviewP>{review.content}</ReviewP>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>There are no reviews.</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["API_KEY","axios","defaults","baseURL","getTrandingMovies","async","get","concat","data","results","error","console","getSearchedMovies","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","ReviewP","styled","p","_templateObject","_taggedTemplateLiteral","Reviews","useParams","reviews","setReviews","useState","useEffect","then","response","_jsx","_Fragment","children","length","map","review","_jsxs","author","content","id"],"sourceRoot":""}