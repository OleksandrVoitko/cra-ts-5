{"version":3,"file":"static/js/606.bf4e3103.chunk.js","mappings":"qKAAO,MAAMA,EAAU,mCCGvBC,EAAAA,EAAMC,SAASC,QDFS,+BCIjB,MAAMC,EAAoBC,UAC/B,IAEE,aADuBJ,EAAAA,EAAMK,IAAI,8BAADC,OAA+BP,KAC/CQ,KAAKC,OACvB,CAAE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GAGWE,EAAoBP,UAC/B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,sBAADC,OACRM,EAAK,aAAAN,OAAYP,KAEzBQ,KAAKC,OACvB,CAAE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GAGWI,EAAkBT,UAC7B,IAEE,aADuBJ,EAAAA,EAAMK,IAAI,SAADC,OAAUQ,EAAO,aAAAR,OAAYP,KAC7CQ,IAClB,CAAE,MAAOE,GACPC,QAAQD,MAAMA,EAChB,GAGWM,EAAeX,UAC1B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,UAADC,OACpBQ,EAAO,qBAAAR,OAAoBP,KAEvBQ,KAAKS,IACvB,CAAE,MAAOP,GACPC,QAAQD,MAAMA,EAChB,GAGWQ,EAAkBb,UAC7B,IAIE,aAHuBJ,EAAAA,EAAMK,IAAI,SAADC,OACrBQ,EAAO,qBAAAR,OAAoBP,KAEtBQ,IAClB,CAAE,MAAOE,GACPC,QAAQD,MAAMA,EAChB,E,gHCnDK,MAAMS,EAASC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8OAUlBC,EAAaJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2JAQtBI,EAAUP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yFAMpBO,EAAYV,EAAAA,GAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+B,aCpBlB,SAASU,IACtB,MAAM,QAAElB,IAAYmB,EAAAA,EAAAA,OACbjB,EAAMkB,IAAWC,EAAAA,EAAAA,UAAS,MAOjC,OAJAC,EAAAA,EAAAA,YAAU,MACRrB,EAAAA,EAAAA,IAAaD,GAASuB,KAAKH,EAAQ,GAClC,CAACpB,KAGFwB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGxB,IACCsB,EAAAA,EAAAA,KAACpB,EAAM,CAAAsB,SACJxB,EAAKyB,KAAKC,IACTC,EAAAA,EAAAA,MAACpB,EAAU,CAAAiB,SAAA,EACTF,EAAAA,EAAAA,KAACZ,EAAO,CACNkB,IACEF,EAAMG,aAAY,GAAAvC,OAdd,mCAecA,OAAGoC,EAAMG,cACvBC,EAENC,IAAKL,EAAMM,KACXC,MAAM,SAERX,EAAAA,EAAAA,KAACT,EAAS,CAAAW,SAAEE,EAAMM,QAClBL,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,cAAYE,EAAMQ,eAXNR,EAAMS,SAkBnC,C","sources":["api/apiConst.ts","api/getMovies.ts","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["export const API_KEY = \"9d3b2d59c7632f197e52385ff97229b9\";\r\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\r\n","import axios from \"axios\";\r\nimport { API_KEY, BASE_URL } from \"./apiConst\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport const getTrandingMovies = async () => {\r\n  try {\r\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getSearchedMovies = async (query: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `search/movie?query=${query}&api_key=${API_KEY}`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async (movieId: string) => {\r\n  try {\r\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieCast = async (movieId: string) => {\r\n  try {\r\n    const responce = await axios.get(\r\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\r\n    );\r\n    return responce.data.cast;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getMovieReviews = async (movieId: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListUl = styled.ul`\r\n  list-style: none;\r\n  display: grid;\r\n  place-items: center;\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n  grid-template-rows: repeat(1, 1fr);\r\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n  gap: 30px;\r\n`;\r\nexport const ListItemLi = styled.li`\r\n  width: 160px;\r\n  height: 100%;\r\n  text-align: center;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\r\n  overflow: hidden;\r\n`;\r\nexport const ItemImg = styled.img`\r\n  width: 100%;\r\n  height: 250px;\r\n  border-radius: 5px;\r\n  object-fit: cover;\r\n`;\r\nexport const ItemNameP = styled.p`\r\n  font-weight: 700;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieCast } from \"../../api/getMovies\";\r\nimport noPoster from \"../../images/noposter.jpg\";\r\nimport { ListUl, ListItemLi, ItemImg, ItemNameP } from \"./Cast.styled\";\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState(null);\r\n  const urlActorImg = \"https://image.tmdb.org/t/p/w300\";\r\n\r\n  useEffect(() => {\r\n    getMovieCast(movieId).then(setCast);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {cast && (\r\n        <ListUl>\r\n          {cast.map((actor) => (\r\n            <ListItemLi key={actor.id}>\r\n              <ItemImg\r\n                src={\r\n                  actor.profile_path\r\n                    ? `${urlActorImg}${actor.profile_path}`\r\n                    : noPoster\r\n                }\r\n                alt={actor.name}\r\n                width=\"100\"\r\n              />\r\n              <ItemNameP>{actor.name}</ItemNameP>\r\n              <p>Character: {actor.character}</p>\r\n            </ListItemLi>\r\n          ))}\r\n        </ListUl>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["API_KEY","axios","defaults","baseURL","getTrandingMovies","async","get","concat","data","results","error","console","getSearchedMovies","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","ListUl","styled","ul","_templateObject","_taggedTemplateLiteral","ListItemLi","li","_templateObject2","ItemImg","img","_templateObject3","ItemNameP","p","_templateObject4","Cast","useParams","setCast","useState","useEffect","then","_jsx","_Fragment","children","map","actor","_jsxs","src","profile_path","noPoster","alt","name","width","character","id"],"sourceRoot":""}